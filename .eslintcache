[{"D:\\nikita\\projects\\react-todo\\src\\index.js":"1","D:\\nikita\\projects\\react-todo\\src\\App.jsx":"2","D:\\nikita\\projects\\react-todo\\src\\components\\TodoItem.jsx":"3","D:\\nikita\\projects\\react-todo\\src\\components\\TodoInput.jsx":"4","D:\\nikita\\projects\\react-todo\\src\\components\\TodoActions.jsx":"5"},{"size":234,"mtime":1612766754456,"results":"6","hashOfConfig":"7"},{"size":907,"mtime":1612814803104,"results":"8","hashOfConfig":"7"},{"size":797,"mtime":1612814763658,"results":"9","hashOfConfig":"7"},{"size":2569,"mtime":1612814834732,"results":"10","hashOfConfig":"7"},{"size":1123,"mtime":1612766754455,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ax8enq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"D:\\nikita\\projects\\react-todo\\src\\index.js",[],["24","25"],"D:\\nikita\\projects\\react-todo\\src\\App.jsx",[],"D:\\nikita\\projects\\react-todo\\src\\components\\TodoItem.jsx",[],"D:\\nikita\\projects\\react-todo\\src\\components\\TodoInput.jsx",["26"],"D:\\nikita\\projects\\react-todo\\src\\components\\TodoActions.jsx",["27","28","29","30"],"const TodoActions = ({ key, tasks, setTasks }) => {\r\n  const editTodoHandler = (event) => {\r\n    const newText = prompt('Введите новый текст', '');\r\n\r\n    // tasks.indexOf\r\n\r\n    setTasks((prevTasks) => {\r\n      prevTasks.filter((item) => {\r\n        if (item.id === key) {\r\n          // окей ли вообще перезаписывать полностью стейт? Мб можно было бы как-то обновить?\r\n        }\r\n      });\r\n\r\n      // return [...prevTasks, ]\r\n    });\r\n  };\r\n\r\n  const removeTodoHandler = (event) => {};\r\n\r\n  return (\r\n    <div className=\"todo-actions\">\r\n      <svg className=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 384\">\r\n        <path d=\"M0 304v80h80l236-236-80-80zM378 56L328 6c-8-8-22-8-30 0l-39 39 80 80 39-39c8-8 8-22 0-30z\"></path>\r\n      </svg>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 96 96\">\r\n        <path d=\"M63 48l32-33v-2L83 1a2 2 0 00-2 0L48 33 15 1h-2L1 13v2l32 33L1 81v2l12 12a2 2 0 002 0l33-32 33 32a2 2 0 002 0l12-12v-2L63 48z\"></path>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoActions;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":11,"column":30,"nodeType":"37","messageId":"38","endLine":11,"endColumn":32},{"ruleId":"39","severity":1,"message":"40","line":2,"column":9,"nodeType":"41","messageId":"42","endLine":2,"endColumn":24},{"ruleId":"39","severity":1,"message":"43","line":3,"column":11,"nodeType":"41","messageId":"42","endLine":3,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":8,"column":31,"nodeType":"46","messageId":"47","endLine":8,"endColumn":33},{"ruleId":"39","severity":1,"message":"48","line":18,"column":9,"nodeType":"41","messageId":"42","endLine":18,"endColumn":26},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'editTodoHandler' is assigned a value but never used.","Identifier","unusedVar","'newText' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'removeTodoHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]